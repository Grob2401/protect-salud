//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Salud.LPService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.laprotectora.com.pe/", ConfigurationName="LPService.ServicioWebLPSoap")]
    public interface ServicioWebLPSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Registrar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.Respuesta[] WS_Registrar(
                    string usuario, 
                    string contrasena, 
                    string cod_cliente, 
                    string cod_titula, 
                    string categoria, 
                    string centro_costo, 
                    string plan, 
                    string afi_nombre, 
                    string afi_apepat, 
                    string afi_apemat, 
                    string sexo, 
                    string fch_naci, 
                    string fch_alta, 
                    string fch_baja, 
                    string fch_caren, 
                    string email, 
                    string tipo_doc, 
                    string documento, 
                    string direccion, 
                    string t_fijo, 
                    string t_movil, 
                    string estado_civil, 
                    string contrato, 
                    string contratante, 
                    string nacionalidad, 
                    string continuidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Registrar", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_RegistrarAsync(
                    string usuario, 
                    string contrasena, 
                    string cod_cliente, 
                    string cod_titula, 
                    string categoria, 
                    string centro_costo, 
                    string plan, 
                    string afi_nombre, 
                    string afi_apepat, 
                    string afi_apemat, 
                    string sexo, 
                    string fch_naci, 
                    string fch_alta, 
                    string fch_baja, 
                    string fch_caren, 
                    string email, 
                    string tipo_doc, 
                    string documento, 
                    string direccion, 
                    string t_fijo, 
                    string t_movil, 
                    string estado_civil, 
                    string contrato, 
                    string contratante, 
                    string nacionalidad, 
                    string continuidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Reactivar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.Respuesta[] WS_Reactivar(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string NroReactivacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Reactivar", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_ReactivarAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string NroReactivacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.Respuesta[] WS_Actualizar(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja, string fch_caren, string email, string direccion, string t_fijo, string t_movil, string estado_civil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_ActualizarAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja, string fch_caren, string email, string direccion, string t_fijo, string t_movil, string estado_civil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Registrar_Aviso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.RespuestaId[] WS_Registrar_Aviso(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Registrar_Aviso", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Registrar_AvisoAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar_Aviso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.RespuestaId[] WS_Actualizar_Aviso(string usuario, string contrasena, string idaviso, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar_Aviso", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Actualizar_AvisoAsync(string usuario, string contrasena, string idaviso, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar_Estado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.Respuesta[] WS_Actualizar_Estado(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string estado_titular, string fch_baja, string causalBaja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar_Estado", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_Actualizar_EstadoAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string estado_titular, string fch_baja, string causalBaja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Registrar_Preexistencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.RespuestaId[] WS_Registrar_Preexistencia(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string codigo, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Registrar_Preexistencia", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Registrar_PreexistenciaAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string codigo, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar_Preexistencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.RespuestaId[] WS_Actualizar_Preexistencia(string usuario, string contrasena, string idpreexistencia, string codigo, string descripcion, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Actualizar_Preexistencia", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Actualizar_PreexistenciaAsync(string usuario, string contrasena, string idpreexistencia, string codigo, string descripcion, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Renovar_Contrato", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Salud.LPService.Respuesta[] WS_Renovar_Contrato(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.laprotectora.com.pe/WS_Renovar_Contrato", ReplyAction="*")]
        System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_Renovar_ContratoAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.laprotectora.com.pe/")]
    public partial class Respuesta : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codigoField;
        
        private string descripcionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
                this.RaisePropertyChanged("Codigo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
                this.RaisePropertyChanged("Descripcion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.laprotectora.com.pe/")]
    public partial class RespuestaId : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codigoField;
        
        private string descripcionField;
        
        private string identificadorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
                this.RaisePropertyChanged("Codigo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
                this.RaisePropertyChanged("Descripcion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Identificador {
            get {
                return this.identificadorField;
            }
            set {
                this.identificadorField = value;
                this.RaisePropertyChanged("Identificador");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicioWebLPSoapChannel : Salud.LPService.ServicioWebLPSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioWebLPSoapClient : System.ServiceModel.ClientBase<Salud.LPService.ServicioWebLPSoap>, Salud.LPService.ServicioWebLPSoap {
        
        public ServicioWebLPSoapClient() {
        }
        
        public ServicioWebLPSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioWebLPSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioWebLPSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioWebLPSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Salud.LPService.Respuesta[] WS_Registrar(
                    string usuario, 
                    string contrasena, 
                    string cod_cliente, 
                    string cod_titula, 
                    string categoria, 
                    string centro_costo, 
                    string plan, 
                    string afi_nombre, 
                    string afi_apepat, 
                    string afi_apemat, 
                    string sexo, 
                    string fch_naci, 
                    string fch_alta, 
                    string fch_baja, 
                    string fch_caren, 
                    string email, 
                    string tipo_doc, 
                    string documento, 
                    string direccion, 
                    string t_fijo, 
                    string t_movil, 
                    string estado_civil, 
                    string contrato, 
                    string contratante, 
                    string nacionalidad, 
                    string continuidad) {
            return base.Channel.WS_Registrar(usuario, contrasena, cod_cliente, cod_titula, categoria, centro_costo, plan, afi_nombre, afi_apepat, afi_apemat, sexo, fch_naci, fch_alta, fch_baja, fch_caren, email, tipo_doc, documento, direccion, t_fijo, t_movil, estado_civil, contrato, contratante, nacionalidad, continuidad);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_RegistrarAsync(
                    string usuario, 
                    string contrasena, 
                    string cod_cliente, 
                    string cod_titula, 
                    string categoria, 
                    string centro_costo, 
                    string plan, 
                    string afi_nombre, 
                    string afi_apepat, 
                    string afi_apemat, 
                    string sexo, 
                    string fch_naci, 
                    string fch_alta, 
                    string fch_baja, 
                    string fch_caren, 
                    string email, 
                    string tipo_doc, 
                    string documento, 
                    string direccion, 
                    string t_fijo, 
                    string t_movil, 
                    string estado_civil, 
                    string contrato, 
                    string contratante, 
                    string nacionalidad, 
                    string continuidad) {
            return base.Channel.WS_RegistrarAsync(usuario, contrasena, cod_cliente, cod_titula, categoria, centro_costo, plan, afi_nombre, afi_apepat, afi_apemat, sexo, fch_naci, fch_alta, fch_baja, fch_caren, email, tipo_doc, documento, direccion, t_fijo, t_movil, estado_civil, contrato, contratante, nacionalidad, continuidad);
        }
        
        public Salud.LPService.Respuesta[] WS_Reactivar(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string NroReactivacion) {
            return base.Channel.WS_Reactivar(usuario, contrasena, cod_cliente, cod_titula, categoria, NroReactivacion);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_ReactivarAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string NroReactivacion) {
            return base.Channel.WS_ReactivarAsync(usuario, contrasena, cod_cliente, cod_titula, categoria, NroReactivacion);
        }
        
        public Salud.LPService.Respuesta[] WS_Actualizar(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja, string fch_caren, string email, string direccion, string t_fijo, string t_movil, string estado_civil) {
            return base.Channel.WS_Actualizar(usuario, contrasena, cod_cliente, cod_titula, categoria, fch_alta, fch_baja, fch_caren, email, direccion, t_fijo, t_movil, estado_civil);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_ActualizarAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja, string fch_caren, string email, string direccion, string t_fijo, string t_movil, string estado_civil) {
            return base.Channel.WS_ActualizarAsync(usuario, contrasena, cod_cliente, cod_titula, categoria, fch_alta, fch_baja, fch_caren, email, direccion, t_fijo, t_movil, estado_civil);
        }
        
        public Salud.LPService.RespuestaId[] WS_Registrar_Aviso(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite) {
            return base.Channel.WS_Registrar_Aviso(usuario, contrasena, cod_cliente, cod_titula, categoria, aviso_descripcion, clasificacion, desde, hasta, limite);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Registrar_AvisoAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite) {
            return base.Channel.WS_Registrar_AvisoAsync(usuario, contrasena, cod_cliente, cod_titula, categoria, aviso_descripcion, clasificacion, desde, hasta, limite);
        }
        
        public Salud.LPService.RespuestaId[] WS_Actualizar_Aviso(string usuario, string contrasena, string idaviso, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite, string estado) {
            return base.Channel.WS_Actualizar_Aviso(usuario, contrasena, idaviso, aviso_descripcion, clasificacion, desde, hasta, limite, estado);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Actualizar_AvisoAsync(string usuario, string contrasena, string idaviso, string aviso_descripcion, string clasificacion, string desde, string hasta, string limite, string estado) {
            return base.Channel.WS_Actualizar_AvisoAsync(usuario, contrasena, idaviso, aviso_descripcion, clasificacion, desde, hasta, limite, estado);
        }
        
        public Salud.LPService.Respuesta[] WS_Actualizar_Estado(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string estado_titular, string fch_baja, string causalBaja) {
            return base.Channel.WS_Actualizar_Estado(usuario, contrasena, cod_cliente, cod_titula, categoria, estado_titular, fch_baja, causalBaja);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_Actualizar_EstadoAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string estado_titular, string fch_baja, string causalBaja) {
            return base.Channel.WS_Actualizar_EstadoAsync(usuario, contrasena, cod_cliente, cod_titula, categoria, estado_titular, fch_baja, causalBaja);
        }
        
        public Salud.LPService.RespuestaId[] WS_Registrar_Preexistencia(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string codigo, string descripcion) {
            return base.Channel.WS_Registrar_Preexistencia(usuario, contrasena, cod_cliente, cod_titula, categoria, codigo, descripcion);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Registrar_PreexistenciaAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string codigo, string descripcion) {
            return base.Channel.WS_Registrar_PreexistenciaAsync(usuario, contrasena, cod_cliente, cod_titula, categoria, codigo, descripcion);
        }
        
        public Salud.LPService.RespuestaId[] WS_Actualizar_Preexistencia(string usuario, string contrasena, string idpreexistencia, string codigo, string descripcion, string estado) {
            return base.Channel.WS_Actualizar_Preexistencia(usuario, contrasena, idpreexistencia, codigo, descripcion, estado);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.RespuestaId[]> WS_Actualizar_PreexistenciaAsync(string usuario, string contrasena, string idpreexistencia, string codigo, string descripcion, string estado) {
            return base.Channel.WS_Actualizar_PreexistenciaAsync(usuario, contrasena, idpreexistencia, codigo, descripcion, estado);
        }
        
        public Salud.LPService.Respuesta[] WS_Renovar_Contrato(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja) {
            return base.Channel.WS_Renovar_Contrato(usuario, contrasena, cod_cliente, cod_titula, categoria, fch_alta, fch_baja);
        }
        
        public System.Threading.Tasks.Task<Salud.LPService.Respuesta[]> WS_Renovar_ContratoAsync(string usuario, string contrasena, string cod_cliente, string cod_titula, string categoria, string fch_alta, string fch_baja) {
            return base.Channel.WS_Renovar_ContratoAsync(usuario, contrasena, cod_cliente, cod_titula, categoria, fch_alta, fch_baja);
        }
    }
}
