@using Entidades;
@{
    ViewBag.Title = "Asegurados";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    @Styles.Render("~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css")
    @Styles.Render("~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css")
}
<style>
    .card-body {
        padding-bottom: 0.25rem !important;
    }
</style>
<div class="row">
    @Html.AntiForgeryToken()
    <div class="col-12">
        <div class="card card-primary card-outline">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-table"></i>
                    Lista de Asegurados
                </h3>
            </div>
            <!-- /.card-header -->
            <div class="card-body ">
                <a class="btn btn-app" data-toggle="modal" data-target="#exampleModal">
                    <i class="fas fa-file xs" style="font-size: 14px;"></i> Agregar
                </a>
                <table id="dglista" class="table table-bordered table-hover" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Cliente</th>
                            <th>Cod.Titular</th>
                            <th>Categoria</th>
                            <th>Paterno</th>
                            <th>Materno</th>
                            <th>Nombres</th>
                            <th>Fecha Nac.</th>
                            <th>TipoDoc</th>
                            <th>NroDoc</th>
                            <th>Sexo</th>
                            <th style="width: 15%"></th>
                        </tr>
                    </thead>
                    <tbody id="bodyAsegurados">
                    </tbody>
                </table>
            </div>
            <!-- /.card-body -->
        </div>

    </div>
    <!-- /.col -->
</div>
@Html.Partial("_AfiliacionCrear", new ENSaludAsegurados())
@section Scripts {
    @Scripts.Render("~/Content/plugins/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js")
    @Scripts.Render("~/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js")
    @Scripts.Render("~/Content//plugins/datatables-responsive/js/responsive.bootstrap4.min.js")
    
    <script src="~/Scripts/Comandos.js"></script>
    <script>
        /// Carga un elemento <select> genérico a partir de una llamada Ajax
        const loadDropDownList = (result, selectId, optionDataField, optionDisplayField, defaultText = '-- Seleccione --') => {
            /// Combo selector
            const select = document.querySelector(`#${selectId}`);

            /// Default element
            const defaultOption = document.createElement('option');
            defaultOption.text = defaultText;
            defaultOption.disabled = 'disabled';
            defaultOption.selected = true;
            select.appendChild(defaultOption)

            /// Other elements
            for (const elem of result) {
                /// Creating...
                const option = document.createElement('option'); // CodigoCategoria, CodigoParentesco
                option.id = elem[optionDataField];
                option.text = elem[optionDisplayField];

                /// Inserting...
                select.appendChild(option);
            }
        }

        const fillDropDownListByAjax = (selectId, optionDataField, optionDisplayField, url, type = 'GET', data = {}, defaultText = '-- Seleccione --') => {
            $.ajax({
                type,
                url,
                data,
                datatype: 'json',
                traditional: true,
                success(result) {
                    loadDropDownList(result, selectId, optionDataField, optionDisplayField, defaultText);
                },
                error(xhr, textStatus, errorThrown) {
                    console.error(xhr);
                }
            });
        }

        const toIntDate = (strDate) => {
            try {
                return parseInt(strDate.split('(')[1].split(')')[0]);
            } catch (e) {
                return undefined;
            }
        }

        const loadTableBody = (result, tableBodyId, fieldNameArray = []) => {
            /// Table Body selector
            const tableBody = document.querySelector(`#${tableBodyId}`);

            /// Default element
            for (const elem of result) {
                /// Creating row...
                const row = document.createElement('tr');

                for (const field of fieldNameArray) {
                    if (field.type === 'Date') {
                        elem[field.name] = moment(new Date(toIntDate(elem[field.name]))).format('DD/MM/YYYY');
                    }
                    const col = document.createElement('td');
                    col.innerText = elem[field.name];
                    row.appendChild(col); /// Inserta columna en la fila
                }

                /// Inserting...
                tableBody.appendChild(row);
            }
        }

        const fillDataTableByAjax = (tableBodyId, url, type = 'GET', data = {}) => {
            $.ajax({
                type,
                url,
                data,
                datatype: 'json',
                traditional: true,
                success(result) {
                    loadTableBody(result, tableBodyId, [
                        { name: 'CodigoCliente', type: 'String' },
                        { name: 'CodigoTitular', type: 'String' },
                        { name: 'Categoria', type: 'String' },
                        { name: 'ApellidoPaterno', type: 'String' },
                        { name: 'ApellidoMaterno', type: 'String' },
                        { name: 'Nombres', type: 'String' },
                        { name: 'FechaNacimiento', type: 'Date' },
                        { name: 'CodigoDocumentoIdentidad', type: 'String' },
                        { name: 'NumeroDocumentoIdentidad', type: 'String' },
                        { name: 'CodigoSexo', type: 'String' },
                    ]);
                },
                error(xhr, textStatus, errorThrown) {
                    console.error(xhr);
                }
            });
        }

        /// Dropdownlist loadings...
        fillDropDownListByAjax('drpParentesco', 'CodigoCategoria', 'DescripcionParentesco', '/SCTRCotizacion/GetParentesco', 'POST'); // Parentesco
        fillDropDownListByAjax('drpVendedor', 'CodigoVendedor', 'DescripcionVendedor', '/SCTRCotizacion/GetVendedor', 'POST'); // Vendedor
        fillDropDownListByAjax('drpCentroCosto', 'CodigoCentroCosto', 'DescripcionCentroCosto', '/SCTRCotizacion/GetCentroCosto', 'POST', { codigocliente: '000494' }); // Centro de Costo
        fillDropDownListByAjax('drpDocumentoIdentidad', 'CodigoDocumentoIdentidad', 'DescripcionDocumentoIdentidad', '/SCTRCotizacion/GetDocumentoIdentidad', 'POST'); // Documento de Identidad
        fillDropDownListByAjax('drpSexo', 'CodigoSexo', 'DescripcionSexo', '/SCTRCotizacion/GetSexo', 'POST'); // Sexo

        /// DataTable loading...
        fillDataTableByAjax('bodyAsegurados', '/SaludAsegurados/GetAsegurados'); // Asegurados
    </script>
}
