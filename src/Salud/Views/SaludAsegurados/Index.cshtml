@using Entidades;
@{
    ViewBag.Title = "Asegurados";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    @Styles.Render("~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css")
    @Styles.Render("~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css")
}
<div class="row">
    <div class="col-12">
        <div class="card card-primary card-outline">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-table"></i>
                    Lista de Asegurados
                </h3>
            </div>
            <!-- /.card-header -->
            <div class="card-body ">
                <a class="btn btn-app" data-toggle="modal" data-target="#exampleModal">
                    <i class="fas fa-file xs" style="font-size: 14px;"></i> Agregar
                </a>
                <table id="dglista" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Cliente</th>
                            <th>Cod.Titular</th>
                            <th>Categoria</th>
                            <th>Paterno</th>
                            <th>Materno</th>
                            <th>Nombres</th>
                            <th>Fecha Nac.</th>
                            <th>TipoDoc</th>
                            <th>NroDoc</th>
                            <th>Sexo</th>
                            <th style="width: 15%"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (ENSaludAsegurados saludAsegurados in (List<ENSaludAsegurados>)ViewBag.SaludAsegurados)
                        {
                            <tr>
                                <td>@saludAsegurados.CodigoCliente </td>
                                <td>@saludAsegurados.CodigoTitular </td>
                                <td>@saludAsegurados.Categoria </td>
                                <td>@saludAsegurados.ApellidoPaterno </td>
                                <td>@saludAsegurados.ApellidoMaterno </td>
                                <td>@saludAsegurados.Nombres </td>
                                <td>@saludAsegurados.FechaNacimiento </td>
                                <td>@saludAsegurados.CodigoDocumentoIdentidad </td>
                                <td>@saludAsegurados.NumeroDocumentoIdentidad </td>
                                <td>@saludAsegurados.CodigoSexo </td>

                                <td class="project-actions text-center">
                                    <form action='@Url.Action("Eliminar", "SaludAsegurados", new {idcliente = saludAsegurados.CodigoCliente,idtitular=saludAsegurados.CodigoTitular,idcategoria=saludAsegurados.Categoria})' method="POST"
                                          onsubmit="return confirm('¿Está seguro de eliminar el registro?');">
                                        @Html.AntiForgeryToken()
                                        <div class="btn-group" role="group">
                                            <a class="btn btn-info btn-sm" style="font-size: 9px;" href='@Url.Action("Crear", "SaludAsegurados", new {idcliente = saludAsegurados.CodigoCliente,idtitular=saludAsegurados.CodigoTitular,idcategoria=saludAsegurados.Categoria})'>
                                                <i class="fas fa-pencil-alt" style="font-size: 9px;">
                                                </i>
                                                Editar
                                            </a>
                                            <button type="submit" class="btn btn-danger btn-sm" title="Eliminar" style="font-size: 9px;">
                                                <i class="fas fa-trash" style="font-size: 9px;">
                                                </i>
                                                Eliminar
                                            </button>
                                        </div>
                                    </form>

                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
            <!-- /.card-body -->
        </div>

    </div>
    <!-- /.col -->
</div>
@Html.Partial("_AfiliacionCrear", new ENSaludAsegurados())
@section Scripts {
    @Scripts.Render("~/Content/plugins/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js")
    @Scripts.Render("~/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js")
    @Scripts.Render("~/Content//plugins/datatables-responsive/js/responsive.bootstrap4.min.js")
    
    <script src="~/Scripts/Comandos.js"></script>
    <script>
        /// Carga un elemento <select> genérico a partir de una llamada Ajax
        function cargarDropDownList(data, selectId, optionDataField, optionDisplayField, defaultText = "-- Seleccione --") {
            /// Combo selector
            const select = document.querySelector(`#${selectId}`);

            /// Default element
            const defaultOption = document.createElement("option");
            defaultOption.text = defaultText;
            defaultOption.disabled = "disabled";
            defaultOption.selected = true;
            select.appendChild(defaultOption)

            /// Other elements
            for (var elem of data) {
                /// Creating...
                const option = document.createElement("option"); // CodigoCategoria, CodigoParentesco
                option.id = elem[optionDataField];
                option.text = elem[optionDisplayField];

                /// Inserting...
                select.appendChild(option);
            }
        }

        const fillByAjax = (url, type = "GET", selectId, optionDataField, optionDisplayField, defaultText = "-- Seleccione --") => {
            $.ajax({
                url,
                type,
                datatype: "json",
                traditional: true,
                success(data) {
                    cargarDropDownList(data, selectId, optionDataField, optionDisplayField);
                },
                error(xhr, textStatus, errorThrown) {
                    console.error(xhr);
                }
            });
        }

        fillByAjax("/SCTRCotizacion/GetParentesco", "POST", "drpParentesco", "CodigoCategoria", "DescripcionParentesco"); // Parentesco
        fillByAjax("/SCTRCotizacion/GetVendedor", "POST", "drpVendedor", "CodigoVendedor", "DescripcionVendedor"); // Vendedor

        $(function () {

            $('#dglista').DataTable({
                "paging": true,
                "lengthChange": false,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
                "lengthMenu": [[5, 10, 50, -1], [5, 10, 50, "Todos"]],
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/1.10.21/i18n/Spanish.json"
                }
            });

        });
    </script>
}
