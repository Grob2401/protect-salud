@using Entidades;
@model Salud.ViewModels.VMClientes
@{
    ViewBag.Title = "Registro de Cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    @Styles.Render("~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css")
    @Styles.Render("~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css")
    @Styles.Render("~/Content/plugins/sweetalert2/sweetalert2.min.css")
    @Styles.Render("~/Content/plugins/select2/css/select2.min.css")
}

@*@using (Html.BeginForm())*@

    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-2">
            <div class="card card-info card-outline shadow-lg sticky-top">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fas fa-th-list"></i>
                        Opciones
                    </h3>
                </div>
                <div class="card-body">
                    <div class="row justify-content-center pt-2 pb-2">
                        <div class="col col-md-7">
                            <button type="button" onclick="SubmitForm();" class="btn btn-app bg-gradient-info" >
                                <i class="fa fa-save text-warning"></i>&nbsp;&nbsp;Guardar
                            </button>
                        </div>
                        <div class="col col-md-7">
                            <a href='@Url.Action("Crear", "Clientes")' class="btn btn-app bg-gradient-secondary">
                                <i class="fa fa-file-signature text-warning"></i>&nbsp;&nbsp;Limpiar
                            </a>
                        </div>
                        <div class="col col-md-7">
                            <a href='@Url.Action("Index", "Clientes")' class="btn btn-app bg-gradient-danger">
                                <i class="fa fa-arrow-left text-warning"></i>&nbsp;&nbsp;Regresar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="m-auto col-md-10">
            <div class="card card-primary card-outline shadow-lg">
                <div class="card-header">
                    <h5 class="card-title">Contratante</h5>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>

                <div class="card-body">
                    <ul class="nav nav-tabs">
                        <li class="nav-link active"><a data-toggle="tab" href="#DatosGenerales">DATOS GENERALES</a></li>
                        @if (ViewBag.CodigoClienteID != null)
                        {
                            <li class="nav-link"><a data-toggle="tab" href="#MediosdePago">MEDIOS DE PAGO</a></li>
                        }
                    </ul>

                    <div class="tab-content">
                        <div id="DatosGenerales" class="tab-pane p-3 border-left border-default active">
                            @using (Html.BeginForm("Crear", "Clientes", FormMethod.Post, new { id = "Form", onsubmit = "return validateForm()" }))
                            {
                                <div class="row">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="col-md-4">
                                        <div class="form-group" hidden>
                                            <label for="txtCodigoCliente">Código Cliente</label>
                                            @Html.TextBoxFor(model => model.Clientes.CodigoCliente, new { id = "txtCodigoCliente", @class = "form-control form-control-sm", @placeholder = "", @readonly = "readonly" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Clientes.CodigoTipoCliente, "Tipo Cliente :", htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.Clientes.CodigoTipoCliente, ViewBag.CodigoTipoCliente as SelectList, new { id = "drpTipoCliente", @class = "form-control-sm js-example-responsive", @style = "width:100%", @onchange = "callChangeRazonSocialNombre(this)" })
                                            @Html.ValidationMessageFor(model => model.Clientes.CodigoTipoCliente)
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Clientes.CodigoDocumentoIdentidad, "Tipo Documento", htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("CodigoDocumentoIdentidad", null, new { id = "drpTipoDocumento", @class = "form-control-sm js-example-responsive", @style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.Clientes.CodigoDocumentoIdentidad)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="txtRucDni">RUC / DNI:</label>
                                            @Html.TextBoxFor(model => model.Clientes.RucDni, new { id = "txtRucDni", @class = "form-control form-control-sm", @placeholder = "Ingrese Número de documento" })
                                        </div>
                                    </div>
                                    <div class="col-md-8" id="RS">
                                        <div class="form-group">
                                            <label for="txtRazonSocial">RazonSocial :</label>
                                            @Html.TextBoxFor(model => model.Clientes.RazonSocial, new { id = "txtRazonSocial", @class = "form-control form-control-sm", @placeholder = "Ingrese Razón Social" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="NC">
                                        <div class="form-group">
                                            <label for="txtNombreCorto">NombreCorto</label>
                                            @Html.TextBoxFor(model => model.Clientes.NombreCorto, new { id = "txtNombreCorto", @class = "form-control form-control-sm", @placeholder = "Ingrese Nombre Corto" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="NN">
                                        <div class="form-group">
                                            <Label for="txtApellidosNombres">Nombres :</Label>
                                            @Html.TextBoxFor(model => model.Clientes.Nombres, new { id = "txtApellidosNombres", @class = "form-control form-control-sm", @placeholder = "Ingrese Nombres" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="AP">
                                        <div class="form-group">
                                            <Label for="txtApellidoPaterno">Apellido Paterno :</Label>
                                            @Html.TextBoxFor(model => model.Clientes.Paterno, new { id = "txtApellidoPaterno", @class = "form-control form-control-sm", @placeholder = "Ingrese Apellido Paterno" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="AM">
                                        <div class="form-group">
                                            <Label for="txtApellidoMaterno">Apellido Materno :</Label>
                                            @Html.TextBoxFor(model => model.Clientes.Materno, new { id = "txtApellidoMaterno", @class = "form-control form-control-sm", @placeholder = "Ingrese Apellido Materno" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Clientes.CodigoDpto, "Departamento", htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("CodigoDpto", null, new { id = "drpDepartamento", @class = "form-control-sm js-example-responsive", @style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.Clientes.CodigoDpto)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Clientes.CodigoProv, "Provincia", htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("CodigoProv", null, new { id = "drpProvincia", @class = "form-control-sm js-example-responsive", @style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.Clientes.CodigoProv)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Clientes.CodigoDist, "Distrito", htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("CodigoDist", null, new { id = "drpDistrito", @class = "form-control-sm js-example-responsive", @style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.Clientes.CodigoDist)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>Email</label>
                                            @Html.TextBoxFor(model => model.Clientes.Email, new { id = "Email", @class = "form-control form-control-sm", @placeholder = "Ingrese Correo Electrónico" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="txtTelefono1">Telefono1</label>
                                            @Html.TextBoxFor(model => model.Clientes.Telefono1, new { id = "txtTelefono1", @class = "form-control form-control-sm", @placeholder = "Ingrese Primer Teléfono" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="txtTelefono2">Telefono2</label>
                                            @Html.TextBoxFor(model => model.Clientes.Telefono2, new { id = "txtTelefono2", @class = "form-control form-control-sm", @placeholder = "Ingrese Segundo Teléfono" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="txtPaginaWeb">PaginaWeb</label>
                                            @Html.TextBoxFor(model => model.Clientes.PaginaWeb, new { id = "txtPaginaWeb", @class = "form-control form-control-sm", @placeholder = "Ingrese Ingrese Link de Página Web" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="txtCodigoCotizacion">Dirección</label>
                                            @Html.TextBoxFor(model => model.Clientes.Direccion, new { id = "txtDireccion", @class = "form-control form-control-sm", @placeholder = "Ingrese su dirección" })
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group">
                                            <label for="txtPersonaContacto">PersonaContacto :</label>
                                            @Html.TextBoxFor(model => model.Clientes.PersonaContacto, new { id = "txtPersonaContacto", @class = "form-control form-control-sm", @placeholder = "Ingrese Nombre de persona de contacto", @onfocus = "PersonaContactoFill(event)" })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div id="MediosdePago" class="tab-pane p-3 border-left border-default fade">

                            <div class="row">
                                <div class="col-md-12">
                                    <h5>Tarjetas</h5>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    @if (ViewBag.Tarjetas != null)
                                    {
                                        foreach (ENTarjeta tarjeta in (List<ENTarjeta>)ViewBag.Tarjetas)
                                        {
                                            using (Html.BeginForm("EliminarTarjeta", "Clientes", FormMethod.Post, new { id = "FormTarjeta" }))
                                            {                                            
                                                <div class="card">
                                                    <div class="card-header">

                                                        <h5 class="mb-0 well">
                                                            @Html.HiddenFor(model => model.Tarjeta.CodigoCliente, new { id = "CodigoClienteTarjeta", @class = "form-control form-control-sm", Value = @tarjeta.CodigoCliente })
                                                            @Html.HiddenFor(model => model.Tarjeta.IdClienteTarjetas, new { id = "idTarjeta", @class = "form-control form-control-sm", Value = @tarjeta.IdClienteTarjetas })
                                                            <div class="row" hidden>
                                                                @tarjeta.NumeroTarjeta
                                                            </div>
                                                            <div class="row" hidden>
                                                                @tarjeta.IdClienteTarjetas
                                                            </div>
                                                            <div class="row" hidden>
                                                                @tarjeta.CodigoMarcaTarjeta
                                                            </div>
                                                            <div class="row" hidden>
                                                                @tarjeta.Estado
                                                            </div>
                                                            <div class="row">
                                                                <div class="col text-sm d-flex text-left align-items-center">
                                                                    <img src="~/Images/visa.png" />&nbsp;&nbsp;@tarjeta.NumeroTarjeta.Substring(tarjeta.NumeroTarjeta.Length - 4).PadLeft(tarjeta.NumeroTarjeta.Length, '#')
                                                                </div>
                                                                <div class="col text-sm d-flex justify-content-center align-items-center">
                                                                    <b style="text-transform:capitalize">@tarjeta.titularTarjeta</b>
                                                                </div>
                                                                <div class="col text-sm d-flex justify-content-center align-items-center">
                                                                    <b style="text-transform:capitalize">@tarjeta.mesFinVigencia/@tarjeta.anioFinVigencia</b>
                                                                </div>
                                                                <div class="col">
                                                                    <div class="form-group pull-right">
                                                                        <button type="button" onclick="editarT(event);" class="btn btn-success btn-sm">
                                                                            <i class="fas fa-pencil-alt text-warning"></i>&nbsp;&nbsp;Editar
                                                                        </button>
                                                                        <button type="submit" class="btn btn-danger btn-sm">
                                                                            <i class="fas fa-trash text-warning"></i>&nbsp;&nbsp;Eliminar
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </h5>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <h5>Agregar Tarjeta</h5>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <button type="button" onclick="openModal();" class="btn btn-default btn-sm bg-gradient-secondary">
                                            <i class="fa fa-file-signature text-warning"></i>&nbsp;&nbsp;Agregar Tarjeta de débito o crédito
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>


        </div>
    </div>


<div class="modal fade-scale" id="modalTarjeta" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="exampleModalLabel"><i class="fa fa-7x fa-credit-card  text-warning"></i>&nbsp;&nbsp;Nueva Tarjeta</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AgregarTarjeta", "Clientes", FormMethod.Post, new { id = "Form2", onsubmit = "return validateForm2()" }))
                {
                    <div class="pl-4 pr-4 pt-1 pb-1">
                        <div class="row">
                            <div class="col">
                                <div class="form-group" hidden>
                                    @Html.TextBoxFor(model => model.Tarjeta.IdClienteTarjetas, new { id = "txtIDClienteTarjeta", @class = "form-control form-control-sm", @placeholder = "Cliente", autocomplete = "off" })
                                </div>
                                <div class="form-group" hidden>
                                    @Html.TextBoxFor(model => model.Tarjeta.CodigoCliente, new { id = "txtCodigoClienteTarjeta", @class = "form-control form-control-sm", @placeholder = "Cliente", autocomplete = "off" })
                                </div>
                                <div class="form-group">
                                    <h6>Marca Tarjeta:</h6>
                                    @Html.DropDownListFor(model => model.Tarjeta.CodigoMarcaTarjeta, ViewBag.MarcaTarjetas as SelectList, new { id = "drpMarcaTarjeta", @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group">
                                    <h6>Número de Tarjeta :</h6>
                                    @Html.TextBoxFor(model => model.Tarjeta.NumeroTarjeta, new { id = "txtNumeroTarjeta", @class = "form-control form-control-sm", @placeholder = "xxxxxxxxxxxxxxxx", @type = "text", @maxlength = 16, @autocomplete = "off", @onkeypress = "return isNumberKey(event)" })
                                    @Html.ValidationMessageFor(model => model.Tarjeta.NumeroTarjeta, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <h6>Titular Tarjeta :</h6>
                                    @Html.TextBoxFor(model => model.Tarjeta.titularTarjeta, new { id = "txtTitular", @class = "form-control form-control-sm", @placeholder = "Nombre Titular", autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.Tarjeta.titularTarjeta, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <h6>Fecha Vencimiento :</h6>
                                    <div class="row">
                                        <div class="col">
                                            @{
                                                var meses = new SelectList(new[]
                                                {
                                                    new SelectListItem { Text = "Enero", Value = "1" },
                                                    new SelectListItem { Text = "Febrero", Value = "2" },
                                                    new SelectListItem { Text = "Marzo", Value = "3" },
                                                    new SelectListItem { Text = "Abril", Value = "4" },
                                                    new SelectListItem { Text = "Mayo", Value = "5" },
                                                    new SelectListItem { Text = "Junio", Value = "6" },
                                                    new SelectListItem { Text = "Julio", Value = "7" },
                                                    new SelectListItem { Text = "Agosto", Value = "8" },
                                                    new SelectListItem { Text = "Setiembre", Value = "9" },
                                                    new SelectListItem { Text = "Octubre", Value = "10" },
                                                    new SelectListItem { Text = "Noviembre", Value = "11" },
                                                    new SelectListItem { Text = "Diciembre", Value = "12" },
                                                }, "Value", "Text");
                                            }
                                            @Html.DropDownListFor(model => model.Tarjeta.mesFinVigencia, meses, new { id = "dlMes", @class = "form-control form-control-sm", @placeholder = "Nombre Titular", autocomplete = "off" })
                                            @Html.ValidationMessageFor(model => model.Tarjeta.mesFinVigencia, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col">
                                            @{
                                                var anios = new SelectList(new[]
                                                {
                                                    new SelectListItem { Text = DateTime.Now.Year.ToString(), Value = DateTime.Now.Year.ToString() },
                                                    new SelectListItem { Text = DateTime.Now.AddYears(1).Year.ToString(), Value = DateTime.Now.AddYears(1).Year.ToString() },
                                                    new SelectListItem { Text = DateTime.Now.AddYears(2).Year.ToString(), Value = DateTime.Now.AddYears(2).Year.ToString() },
                                                    new SelectListItem { Text = DateTime.Now.AddYears(3).Year.ToString(), Value = DateTime.Now.AddYears(3).Year.ToString() },
                                                    new SelectListItem { Text = DateTime.Now.AddYears(4).Year.ToString(), Value = DateTime.Now.AddYears(4).Year.ToString() },
                                                    new SelectListItem { Text = DateTime.Now.AddYears(5).Year.ToString(), Value = DateTime.Now.AddYears(5).Year.ToString() },
                                                    new SelectListItem { Text = DateTime.Now.AddYears(6).Year.ToString(), Value = DateTime.Now.AddYears(6).Year.ToString() },
                                                }, "Value", "Text");
                                            }
                                            @Html.DropDownListFor(model => model.Tarjeta.anioFinVigencia, anios, new { id = "dlAnio", @class = "form-control form-control-sm", @placeholder = "Nombre Titular", autocomplete = "off" })
                                            @Html.ValidationMessageFor(model => model.Tarjeta.anioFinVigencia, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col d-flex align-items-center justify-content-center">
                                <img src="~/Images/metodoPago.PNG" alt="pago" class="img-bordered" />
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <button type="submit" class="btn btn-info btn-sm">
                            <i class="fa fa-save text-warning"></i>&nbsp;&nbsp;Guardar
                        </button>
                        <button type="button" onclick="cancelar();" class="btn btn-danger btn-sm">
                            <i class="fa fa-times text-warning"></i>&nbsp;&nbsp;Cancelar
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/Content/plugins/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js")
    @Scripts.Render("~/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js")
    @Scripts.Render("~/Content//plugins/datatables-responsive/js/responsive.bootstrap4.min.js")
    @Scripts.Render("~/Content/plugins/sweetalert2/sweetalert2.min.js")
    @Scripts.Render("~/Content/plugins/select2/js/select2.full.min.js")
    @Scripts.Render("~/Scripts/Shared/util.js")

    @if (ViewBag.TarjetaAdd != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                var mensaje = "@ViewBag.TarjetaAdd";
                mostrarMensaje(mensaje);
                };
        </script>
    }

    @if (ViewBag.TarjetaUpdate != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                var mensaje = "@ViewBag.TarjetaUpdate";
                mostrarMensaje(mensaje);
                };
        </script>
    }

    @if (ViewBag.TarjetaRemove != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                var mensaje = "@ViewBag.TarjetaRemove";
                mostrarMensaje(mensaje);
                };
        </script>
    }

    <script>
        var arregloTarjetas = [];

        $(document).ready(function () {
            //$('.js-example-basic-single').select2();
            $(".js-example-responsive").select2({
                width: 'resolve' // need to override the changed default
            });
            const combito = document.getElementById("drpTipoCliente");
            callChangeRazonSocialNombre(combito);
        });

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

        function callChangeRazonSocialNombre(combo) {
            const razonSocial = document.getElementById("RS");
            const nombreCorto = document.getElementById("NC");
            const nombres = document.getElementById("NN");
            const apellidoPaterno = document.getElementById("AP");
            const apellidoMaterno = document.getElementById("AM");

            console.log(combo.value);
            if (combo.value === "01") {
                razonSocial.removeAttribute("hidden");
                nombreCorto.removeAttribute("hidden");
                nombres.setAttribute("hidden", "");
                apellidoPaterno.setAttribute("hidden", "");
                apellidoMaterno.setAttribute("hidden", "");
                $("#drpTipoDocumento").val("08").change();
            }
            else {
                razonSocial.setAttribute("hidden", "");
                nombreCorto.setAttribute("hidden", "");
                nombres.removeAttribute("hidden");
                apellidoPaterno.removeAttribute("hidden");
                apellidoMaterno.removeAttribute("hidden");
                $("#drpTipoDocumento").val("01").change();
            }
        }


        function SubmitForm() {
            document.getElementById("Form").submit();
        }


        function PersonaContactoFill(e) {
            const tipoCliente = document.getElementById("drpTipoCliente").value;
            const personaContacto = document.getElementById("txtPersonaContacto");

            if (tipoCliente == "09") {
                const nombres = document.getElementById("txtApellidosNombres").value;
                const apellido = document.getElementById("txtApellidoPaterno").value + " " + document.getElementById("txtApellidoMaterno").value;
                if (nombres != "" && apellido != "") {
                    personaContacto.value = nombres + " " + apellido;
                    personaContacto.readOnly = true;
                }
            }
            else {
                personaContacto.value = "";
                personaContacto.readOnly = false;
            }
        }

        function validateForm() {
            var rucDNI = document.forms["Form"]["txtRucDni"].value.trim();
            const combito = document.getElementById("drpTipoCliente");
            console.log(combito.value);
            //---

            if (rucDNI == "") {
                Swal.fire({
                    icon: 'warning',
                    title: 'Advertencia',
                    html: 'Ingrese número de documento RUC/DNI',
                    showCloseButton: true,
                });
                return false;
            }

            if (combito.value === "01") {
                var razonSocial = document.forms["Form"]["txtRazonSocial"].value.trim();
                //---
                if (razonSocial == "") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Advertencia',
                        html: 'Ingrese Razón Social',
                        showCloseButton: true,
                    });
                    return false;
                }
                //---
            }
            else {
                var Nombres = document.forms["Form"]["txtApellidosNombres"].value.trim();
                var apellidosPaterno = document.forms["Form"]["txtApellidoPaterno"].value.trim();
                var apellidoMaterno = document.forms["Form"]["txtApellidoMaterno"].value.trim();
                //---
                if (Nombres == "") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Advertencia',
                        html: 'Ingrese Nombres',
                        showCloseButton: true,
                    });
                    return false;
                }
                //---
                if (apellidosPaterno == "") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Advertencia',
                        html: 'Ingrese apellido paterno',
                        showCloseButton: true,
                    });
                    return false;
                }
                //---
                if (apellidoMaterno == "") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Advertencia',
                        html: 'Ingrese apellido materno',
                        showCloseButton: true,
                    });
                    return false;
                }
            }
        }

        function openModal() {
            $('#modalTarjeta').modal('show');
            document.getElementById("Form2").reset();

            const clienteCli = document.getElementById("txtCodigoCliente").value;
            const clienteTarjeta = document.getElementById("txtCodigoClienteTarjeta");
            clienteTarjeta.value = clienteCli.toString();
        }

        function cancelar() {

            $('#modalTarjeta').modal('hide');
        }

        function editarT(e) {
            $('#modalTarjeta').modal('show');
            var fechaVencimiento = e.target.parentElement.parentElement.previousElementSibling.textContent.trim();
            var titularTarjeta = e.target.parentElement.parentElement.previousElementSibling.previousElementSibling.textContent.trim();
            //var estado = e.target.parentElement.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.parentElement.previousElementSibling.value.trim();
            var marca = e.target.parentElement.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.parentElement.previousElementSibling.previousElementSibling.textContent.trim();
            var idTarjeta = e.target.parentElement.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.textContent.trim();
            var numeroTarjeta = e.target.parentElement.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.textContent.trim();
            var codCliente = document.getElementById("txtCodigoCliente").value;

            const txtCodigoCliente = document.getElementById("txtCodigoClienteTarjeta");
            const txtMarcaTarjeta = document.getElementById("drpMarcaTarjeta");
            const txtNumeroTarjeta = document.getElementById("txtNumeroTarjeta");
            const txtTitularTarjeta = document.getElementById("txtTitular");
            const txtMes = document.getElementById("dlMes");
            const txtAnio = document.getElementById("dlAnio");
            const txtIdTarjeta = document.getElementById("txtIDClienteTarjeta");

            txtCodigoCliente.value = codCliente;
            txtMarcaTarjeta.value = marca;
            txtNumeroTarjeta.value = numeroTarjeta;
            txtTitularTarjeta.value = titularTarjeta;
            txtMes.value = fechaVencimiento.split("/")[0].trim();
            txtAnio.value = fechaVencimiento.split("/")[1].trim();
            txtIdTarjeta.value = idTarjeta;

            console.log(`
                    ${fechaVencimiento}
                    ${titularTarjeta}
                    ${numeroTarjeta}
                    ${estado}
                    ${marca}
                    ${idTarjeta}
                    ${codCliente}
                    `);
        }

        function eliminarT(e) {
            var idTarjeta = e.target.parentElement.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.value.trim();
            var codCliente = document.getElementById("txtCodigoCliente").value;
            var url_method = e.target.getAttribute('data-request-url');

            console.log(`
            ${idTarjeta}
            ${codCliente}
            ${url_method}
            `);

            $.ajax({
                type: "POST",
                url: url_method,
                data: {
                    'id': idTarjeta,
                    'codigoCliente': codCliente
                },
                dataType: "text",
                success: function (r) {
                    location.reload;
                }
            });
        }

    </script>


}
